---
interface Props {
	title: string;
}
const { title } = Astro.props;

import { getCollection } from 'astro:content';

const p1 = await getCollection('P1');
const p2 = await getCollection('P2');
const p3 = await getCollection('P3');
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="flex flex-col min-h-screen">
		<header class="py-4 flex justify-between items-center px-5">
			<button id="menu-button" class="text-white text-2xl">â˜°</button>
			<h1 class="text-center text-white text-xl">Organizacion de computadores</h1>
			<a id="menu-button" href="/" class="text-white hover:cursor-pointer">Home</a>
		</header>
		<main class="flex-grow flex">
			<aside class="w-64 bg-[#4361EE] text-white shadow-xl transition-all duration-300 ease-in-out overflow-y-auto">
				<nav class="p-4">
				  <ul class="space-y-4">
					<li>
					  <details class="group">
						<summary class="flex items-center justify-between p-2 font-semibold cursor-pointer hover:bg-indigo-700/50 rounded-lg transition-all duration-200">
						  <span>Corte 1</span>
						  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transform transition-transform duration-200 group-open:rotate-180" viewBox="0 0 20 20" fill="currentColor">
							<path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
						  </svg>
						</summary>
						<ul class="mt-2 space-y-1 pl-4">
						  {p1.map(activity => (
							<li class="transition-all duration-200 hover:translate-x-1">
							  <a href={`/corte1/${activity.slug}`} class="block py-1 px-2 text-sm text-indigo-200 hover:text-white hover:bg-indigo-700/30 rounded transition-colors">
								{activity.data.title}
							  </a>
							</li>
						  ))}
						</ul>
					  </details>
					</li>
					<li>
					  <details class="group">
						<summary class="flex items-center justify-between p-2 font-semibold cursor-pointer hover:bg-indigo-700/50 rounded-lg transition-all duration-200">
						  <span>Corte 2</span>
						  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transform transition-transform duration-200 group-open:rotate-180" viewBox="0 0 20 20" fill="currentColor">
							<path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
						  </svg>
						</summary>
						<ul class="mt-2 space-y-1 pl-4">
						  {p2.map(activity => (
							<li class="transition-all duration-200 hover:translate-x-1">
							  <a href={`corte2/${activity.slug}`} class="block py-1 px-2 text-sm text-indigo-200 hover:text-white hover:bg-indigo-700/30 rounded transition-colors">
								{activity.data.title}
							  </a>
							</li>
						  ))}
						</ul>
					  </details>
					</li>
					<li>
					  <details class="group">
						<summary class="flex items-center justify-between p-2 font-semibold cursor-pointer hover:bg-indigo-700/50 rounded-lg transition-all duration-200">
						  <span>Corte 3</span>
						  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transform transition-transform duration-200 group-open:rotate-180" viewBox="0 0 20 20" fill="currentColor">
							<path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
						  </svg>
						</summary>
						<ul class="mt-2 space-y-1 pl-4">
						  {p3.map(activity => (
							<li class="transition-all duration-200 hover:translate-x-1">
							  <a href={`corte3/${activity.slug}`} class="block py-1 px-2 text-sm text-indigo-200 hover:text-white hover:bg-indigo-700/30 rounded transition-colors">
								{activity.data.title}
							  </a>
							</li>
						  ))}
						</ul>
					  </details>
					</li>
				  </ul>
				</nav>
			  </aside>
			<section class="flex-grow bg-[#F1F7ED] p-4 overflow-auto">
				<slot />
			</section>
		</main>
	</body>

	<script>
		const menuButton = document.getElementById('menu-button');
		const aside = document.querySelector('aside');
		
		menuButton?.addEventListener('click', () => {
			aside?.classList.toggle('w-0');
			aside?.classList.toggle('w-64');
		});
	</script>
</html>
<style is:global>
	:root {
		--blue: 10, 58, 234;
		--blue-light: 100, 204, 250;
		--blue-dark: 67, 97, 238;
		--blue-gradient: linear-gradient(
			45deg,
			rgb(var(--blue)),
			rgb(var(--blue-light)) 30%,
			white 60%
		);
	}
	html {
		font-family: system-ui, sans-serif;
		background: #1B1B1E;
	}
	body {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}
</style>